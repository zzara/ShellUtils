from math import sqrt, log

class Person:
    """Attributes of a person and various power calculation methods"""

    def __init__(self, weight, mile_run, push_up, pull_up, sit_up, squat, handstand_push_up, gravity=1):
        self.weight = float(weight * 0.453592) * float(gravity)
        self.mile_run = float(mile_run) * 60
        self.push_up = float(push_up)
        self.pull_up = float(pull_up)
        self.sit_up = float(sit_up)
        self.squat = float(squat)
        self.handstand_push_up = float(handstand_push_up)
        self.power_joules = float()
        self.power_level = float()
        self.calculate_energy_production()
        self.calculate_power_level()

    def onerepmax(self, reps, body=1):
        """Calculate one rep max weight"""
        return float((self.weight * body) * (1 + (reps/30)))

    def power(self, work):
        """Power"""
        self.power_joules += work
        return

    @staticmethod
    def vertical_work(kilograms, distance):
        """Measure work in Joules: (50kg)(9.81m/s**2)(0.5m)"""
        return kilograms * 9.81 * distance

    def kenetic_energy(self, distance, time):
        """Calculate knetic energy output"""
        return 0.5 * self.weight * ((distance / (time)) ** 2)

    def calculate_energy_production(self):
        # Add 1RM Push Up Joules
        self.power(self.vertical_work(self.onerepmax(self.push_up, .64), 0.5))
        self.power(self.vertical_work(self.weight * .64, 0.5) * self.push_up)
        # Add 1RM Pull Up Joules
        self.power(self.vertical_work(self.onerepmax(self.pull_up, .95), 0.5))
        self.power(self.vertical_work(self.weight * .95, 0.5) * self.pull_up)
        # Add 1RM Sit Up Joules
        self.power(self.vertical_work(self.onerepmax(self.sit_up, .50), 0.5))
        self.power(self.vertical_work(self.weight * .64, 0.5) * self.sit_up)
        # Add 1RM Squat Joules
        self.power(self.vertical_work(self.onerepmax(self.squat, .95), 0.5))
        self.power(self.vertical_work(self.weight, 0.5) * self.squat)
        # Add 1RM Handstand Push Up Joules
        self.power(self.vertical_work(self.onerepmax(self.handstand_push_up, 0.95), 0.5))
        self.power(self.vertical_work(self.weight, 0.5) * self.handstand_push_up)
        # Add Mile Run
        self.power(self.kenetic_energy(1609.34, self.mile_run))
        return

    def calculate_power_level(self):
        power = self.power_joules
        power = ((((sqrt(power)**sqrt(log(power))) / (power / 1000000)) / (sqrt(power) * sqrt(power))) / 10000) * 1.61766
        
        self.power_level = round(power, 1)
        return 

if __name__ == "__main__":

    print("person", Person(
        weight=180,
        mile_run=10,
        push_up=25,
        pull_up=7,
        sit_up=30,
        squat=40,
        handstand_push_up=0
    ).power_level)
